services:
  observabilityexample:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5300:5300"
    networks:
      - monitoring
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5300
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
      - OTEL_SERVICE_NAME=ObservabilityExample
      - OTEL_RESOURCE_ATTRIBUTES=service.name=ObservabilityExample,service.version=1.0.0
      - OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5300/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      jaeger:
        condition: service_healthy

  jaeger:
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
      - "9411:9411"
    networks:
      - monitoring
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:16686"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      - monitoring
    depends_on:
      - prometheus

networks:
  monitoring:
    name: monitoring
    driver: bridge